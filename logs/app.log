2023-10-18 10:53:13.952  INFO   Version.<clinit> - HV000001: Hibernate Validator 6.2.5.Final
2023-10-18 10:53:13.958  INFO   MtgApplication.logStarting - Starting MtgApplication using Java 17.0.8.1 on JuneUTF with PID 11496 (C:\JavaSpingBoot\K&K\MTG\target\classes started by juneu in C:\JavaSpingBoot\K&K\MTG)
2023-10-18 10:53:13.961  INFO   MtgApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
2023-10-18 10:53:14.045  INFO   DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-10-18 10:53:14.046  INFO   DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-10-18 10:53:16.091  INFO   TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
2023-10-18 10:53:16.105  INFO   Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-8080"]
2023-10-18 10:53:16.107  INFO   StandardService.log - Starting service [Tomcat]
2023-10-18 10:53:16.108  INFO   StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.80]
2023-10-18 10:53:16.220  INFO   [/].log - Initializing Spring embedded WebApplicationContext
2023-10-18 10:53:16.220  INFO   ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2137 ms
2023-10-18 10:53:17.014  WARN   TemplateMode.parse - [THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2023-10-18 10:53:17.258  INFO   DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@593777c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5ab3122f, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c16b8a2, org.springframework.security.web.header.HeaderWriterFilter@2556537f, org.springframework.security.web.authentication.logout.LogoutFilter@ad8adbf, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3014663e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7982b451, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6339ba68, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@fb579ad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45673e66, org.springframework.security.web.session.SessionManagementFilter@5860d545, org.springframework.security.web.access.ExceptionTranslationFilter@2cbff1c7, org.springframework.security.web.access.intercept.AuthorizationFilter@5b1bdea5]
2023-10-18 10:53:17.566  INFO   WelcomePageHandlerMapping.<init> - Adding welcome page template: index
2023-10-18 10:53:17.902  INFO   OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
2023-10-18 10:53:17.934  INFO   Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-8080"]
2023-10-18 10:53:17.964  INFO   TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
2023-10-18 10:53:17.968  INFO   SimpleBrokerMessageHandler.info - Starting...
2023-10-18 10:53:17.968  INFO   SimpleBrokerMessageHandler.info - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3051428c]]
2023-10-18 10:53:17.968  INFO   SimpleBrokerMessageHandler.info - Started.
2023-10-18 10:53:17.987  INFO   MtgApplication.logStarted - Started MtgApplication in 4.596 seconds (JVM running for 6.267)
2023-10-18 10:53:18.010  INFO   HikariDataSource.getConnection - HikariPool-1 - Starting...
2023-10-18 10:53:18.199  INFO   HikariDataSource.getConnection - HikariPool-1 - Start completed.
2023-10-18 10:53:26.043  INFO   [/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-18 10:53:26.043  INFO   DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
2023-10-18 10:53:26.043  INFO   DispatcherServlet.initServletBean - Completed initialization in 0 ms
2023-10-18 10:53:26.265  WARN   SessionIdGeneratorBase.log - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [157] milliseconds.
2023-10-18 10:54:17.374  INFO   WebSocketMessageBrokerStats.lambda$initLoggingTask$0 - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 15, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 12, active threads = 1, queued tasks = 3, completed tasks = 13]
2023-10-18 10:59:08.138  INFO   PlanController.plan - 予約内容の新規登録情報：PlanModel(id=98, date_day=金, date_plan=2023-10-20, time_start=10:00, time_end=16:00, purpose=1, charge=1, status=null)
2023-10-18 11:03:31.960  INFO   OperationController.postOperationEdit - 編集情報：TableModel(id=6, tableName=purpose, textEdit=testadasd)
2023-10-18 11:03:38.807  INFO   OperationController.postOperationRestore - 復元情報：TableModel(id=6, tableName=purpose, textEdit=null)
2023-10-18 11:03:43.152  INFO   OperationController.postOperationRestore - 復元情報：TableModel(id=11, tableName=charge, textEdit=null)
2023-10-18 11:11:48.406  INFO   LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener.onApplicationEvent - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-10-18 11:11:48.419  INFO   SimpleBrokerMessageHandler.info - Stopping...
2023-10-18 11:11:48.419  INFO   SimpleBrokerMessageHandler.info - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3051428c]]
2023-10-18 11:11:48.419  INFO   SimpleBrokerMessageHandler.info - Stopped.
2023-10-18 11:11:48.445  INFO   Http11NioProtocol.log - Pausing ProtocolHandler ["http-nio-8080"]
2023-10-18 11:11:48.446  INFO   StandardService.log - Stopping service [Tomcat]
2023-10-18 11:11:48.448  INFO   [/].log - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-10-18 11:11:48.457  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:11:48.460  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:11:48.461  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:11:48.462  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-11] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:11:48.464  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientOutboundChannel-34] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:11:48.465  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientOutboundChannel-35] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:11:48.467  INFO   Http11NioProtocol.log - Stopping ProtocolHandler ["http-nio-8080"]
2023-10-18 11:11:48.470  INFO   Http11NioProtocol.log - Destroying ProtocolHandler ["http-nio-8080"]
2023-10-18 11:11:48.482  INFO   HikariDataSource.close - HikariPool-1 - Shutdown initiated...
2023-10-18 11:11:48.487  INFO   HikariDataSource.close - HikariPool-1 - Shutdown completed.
2023-10-18 11:11:48.627  INFO   MtgApplication.logStarting - Starting MtgApplication using Java 17.0.8.1 on JuneUTF with PID 11496 (C:\JavaSpingBoot\K&K\MTG\target\classes started by juneu in C:\JavaSpingBoot\K&K\MTG)
2023-10-18 11:11:48.627  INFO   MtgApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
2023-10-18 11:11:49.194  INFO   TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
2023-10-18 11:11:49.195  INFO   Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-8080"]
2023-10-18 11:11:49.197  INFO   StandardService.log - Starting service [Tomcat]
2023-10-18 11:11:49.197  INFO   StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.80]
2023-10-18 11:11:49.233  INFO   [/].log - Initializing Spring embedded WebApplicationContext
2023-10-18 11:11:49.233  INFO   ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 601 ms
2023-10-18 11:11:49.504  WARN   TemplateMode.parse - [THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2023-10-18 11:11:49.566  INFO   DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@35925964, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1ef9aa8a, org.springframework.security.web.context.SecurityContextPersistenceFilter@26ff54d3, org.springframework.security.web.header.HeaderWriterFilter@61a41eb6, org.springframework.security.web.authentication.logout.LogoutFilter@2a9a3901, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@28586621, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@285bef07, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@694b1514, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3373022e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75fbbe1a, org.springframework.security.web.session.SessionManagementFilter@7df2b350, org.springframework.security.web.access.ExceptionTranslationFilter@1982e51e, org.springframework.security.web.access.intercept.AuthorizationFilter@502f6df9]
2023-10-18 11:11:49.643  INFO   WelcomePageHandlerMapping.<init> - Adding welcome page template: index
2023-10-18 11:11:49.741  INFO   OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
2023-10-18 11:11:49.756  INFO   Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-8080"]
2023-10-18 11:11:49.761  INFO   TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
2023-10-18 11:11:49.762  INFO   SimpleBrokerMessageHandler.info - Starting...
2023-10-18 11:11:49.762  INFO   SimpleBrokerMessageHandler.info - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@68af5759]]
2023-10-18 11:11:49.763  INFO   SimpleBrokerMessageHandler.info - Started.
2023-10-18 11:11:49.769  INFO   HikariDataSource.getConnection - HikariPool-2 - Starting...
2023-10-18 11:11:49.770  INFO   MtgApplication.logStarted - Started MtgApplication in 1.203 seconds (JVM running for 1118.05)
2023-10-18 11:11:49.774  INFO   ConditionEvaluationDeltaLoggingListener.onApplicationEvent - Condition evaluation unchanged
2023-10-18 11:11:49.859  INFO   HikariDataSource.getConnection - HikariPool-2 - Start completed.
2023-10-18 11:11:59.045  INFO   [/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-18 11:11:59.045  INFO   DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
2023-10-18 11:11:59.046  INFO   DispatcherServlet.initServletBean - Completed initialization in 1 ms
2023-10-18 11:11:59.367  WARN   APIController.getCherge - 担当者のAPIを呼び出せない
2023-10-18 11:12:49.594  INFO   WebSocketMessageBrokerStats.lambda$initLoggingTask$0 - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 6, active threads = 0, queued tasks = 0, completed tasks = 6], outboundChannel[pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 12, active threads = 1, queued tasks = 3, completed tasks = 14]
2023-10-18 11:14:43.381  INFO   LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener.onApplicationEvent - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-10-18 11:14:43.387  INFO   SimpleBrokerMessageHandler.info - Stopping...
2023-10-18 11:14:43.391  INFO   SimpleBrokerMessageHandler.info - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@68af5759]]
2023-10-18 11:14:43.391  INFO   SimpleBrokerMessageHandler.info - Stopped.
2023-10-18 11:14:43.417  INFO   Http11NioProtocol.log - Pausing ProtocolHandler ["http-nio-8080"]
2023-10-18 11:14:43.417  INFO   StandardService.log - Stopping service [Tomcat]
2023-10-18 11:14:43.419  INFO   [/].log - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-10-18 11:14:43.426  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:14:43.428  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:14:43.429  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:14:43.430  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-10] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:14:43.431  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-11] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:14:43.432  INFO   Http11NioProtocol.log - Stopping ProtocolHandler ["http-nio-8080"]
2023-10-18 11:14:43.435  INFO   Http11NioProtocol.log - Destroying ProtocolHandler ["http-nio-8080"]
2023-10-18 11:14:43.450  INFO   HikariDataSource.close - HikariPool-2 - Shutdown initiated...
2023-10-18 11:14:43.464  INFO   HikariDataSource.close - HikariPool-2 - Shutdown completed.
2023-10-18 11:14:43.635  INFO   MtgApplication.logStarting - Starting MtgApplication using Java 17.0.8.1 on JuneUTF with PID 11496 (C:\JavaSpingBoot\K&K\MTG\target\classes started by juneu in C:\JavaSpingBoot\K&K\MTG)
2023-10-18 11:14:43.636  INFO   MtgApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
2023-10-18 11:14:44.214  INFO   TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
2023-10-18 11:14:44.215  INFO   Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-8080"]
2023-10-18 11:14:44.216  INFO   StandardService.log - Starting service [Tomcat]
2023-10-18 11:14:44.216  INFO   StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.80]
2023-10-18 11:14:44.245  INFO   [/].log - Initializing Spring embedded WebApplicationContext
2023-10-18 11:14:44.246  INFO   ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 606 ms
2023-10-18 11:14:44.523  WARN   TemplateMode.parse - [THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2023-10-18 11:14:44.578  INFO   DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4dbf77c1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e0ef419, org.springframework.security.web.context.SecurityContextPersistenceFilter@1bbf7eab, org.springframework.security.web.header.HeaderWriterFilter@1882fd97, org.springframework.security.web.authentication.logout.LogoutFilter@71beb56d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2ba6d4d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33a1984a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c40b5ec, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@74005fc7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5393f914, org.springframework.security.web.session.SessionManagementFilter@756ceec5, org.springframework.security.web.access.ExceptionTranslationFilter@6fe8ebd5, org.springframework.security.web.access.intercept.AuthorizationFilter@3301047]
2023-10-18 11:14:44.651  INFO   WelcomePageHandlerMapping.<init> - Adding welcome page template: index
2023-10-18 11:14:44.747  INFO   OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
2023-10-18 11:14:44.764  INFO   Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-8080"]
2023-10-18 11:14:44.770  INFO   TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
2023-10-18 11:14:44.771  INFO   SimpleBrokerMessageHandler.info - Starting...
2023-10-18 11:14:44.772  INFO   SimpleBrokerMessageHandler.info - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@7d35bcd]]
2023-10-18 11:14:44.773  INFO   SimpleBrokerMessageHandler.info - Started.
2023-10-18 11:14:44.783  INFO   HikariDataSource.getConnection - HikariPool-3 - Starting...
2023-10-18 11:14:44.783  INFO   MtgApplication.logStarted - Started MtgApplication in 1.206 seconds (JVM running for 1293.062)
2023-10-18 11:14:44.787  INFO   ConditionEvaluationDeltaLoggingListener.onApplicationEvent - Condition evaluation unchanged
2023-10-18 11:14:44.824  INFO   HikariDataSource.getConnection - HikariPool-3 - Start completed.
2023-10-18 11:14:49.868  INFO   [/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-18 11:14:49.868  INFO   DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
2023-10-18 11:14:49.868  INFO   DispatcherServlet.initServletBean - Completed initialization in 0 ms
2023-10-18 11:14:57.894  INFO   OperationController.postOperationDelete - 削除情報：TableModel(id=11, tableName=charge, textEdit=null)
2023-10-18 11:15:08.325  INFO   OperationController.postOperationDelete - 削除情報：TableModel(id=6, tableName=purpose, textEdit=null)
2023-10-18 11:15:25.694  INFO   LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener.onApplicationEvent - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-10-18 11:15:25.697  INFO   SimpleBrokerMessageHandler.info - Stopping...
2023-10-18 11:15:25.698  INFO   SimpleBrokerMessageHandler.info - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@7d35bcd]]
2023-10-18 11:15:25.698  INFO   SimpleBrokerMessageHandler.info - Stopped.
2023-10-18 11:15:25.720  INFO   Http11NioProtocol.log - Pausing ProtocolHandler ["http-nio-8080"]
2023-10-18 11:15:25.723  INFO   StandardService.log - Stopping service [Tomcat]
2023-10-18 11:15:25.723  INFO   [/].log - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-10-18 11:15:25.728  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.729  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.730  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.732  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.734  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.736  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientOutboundChannel-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.738  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.740  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.741  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.742  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.743  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.743  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-8] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.745  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-9] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.746  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientOutboundChannel-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.746  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-9] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.747  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-10] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.748  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-11] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.749  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-12] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.751  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientOutboundChannel-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.753  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-10] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.754  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-13] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.756  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-14] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.757  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-15] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.757  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-12] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.758  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-16] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.759  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-17] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.760  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-18] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.761  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientOutboundChannel-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.763  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-19] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.764  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-20] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.765  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-21] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.766  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientOutboundChannel-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.767  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-22] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.770  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-23] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.771  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-24] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:15:25.772  INFO   Http11NioProtocol.log - Stopping ProtocolHandler ["http-nio-8080"]
2023-10-18 11:15:25.774  INFO   Http11NioProtocol.log - Destroying ProtocolHandler ["http-nio-8080"]
2023-10-18 11:15:25.780  INFO   HikariDataSource.close - HikariPool-3 - Shutdown initiated...
2023-10-18 11:15:25.784  INFO   HikariDataSource.close - HikariPool-3 - Shutdown completed.
2023-10-18 11:15:25.946  INFO   MtgApplication.logStarting - Starting MtgApplication using Java 17.0.8.1 on JuneUTF with PID 11496 (C:\JavaSpingBoot\K&K\MTG\target\classes started by juneu in C:\JavaSpingBoot\K&K\MTG)
2023-10-18 11:15:25.946  INFO   MtgApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
2023-10-18 11:15:26.403  INFO   TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
2023-10-18 11:15:26.404  INFO   Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-8080"]
2023-10-18 11:15:26.404  INFO   StandardService.log - Starting service [Tomcat]
2023-10-18 11:15:26.404  INFO   StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.80]
2023-10-18 11:15:26.432  INFO   [/].log - Initializing Spring embedded WebApplicationContext
2023-10-18 11:15:26.432  INFO   ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 483 ms
2023-10-18 11:15:26.679  WARN   TemplateMode.parse - [THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2023-10-18 11:15:26.742  INFO   DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4060eb80, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41804304, org.springframework.security.web.context.SecurityContextPersistenceFilter@65894966, org.springframework.security.web.header.HeaderWriterFilter@7b582dcd, org.springframework.security.web.authentication.logout.LogoutFilter@249d8180, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@770a8a3e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7bd82269, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@41d45e9a, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3f5384de, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62787a70, org.springframework.security.web.session.SessionManagementFilter@4a7013d2, org.springframework.security.web.access.ExceptionTranslationFilter@428b9896, org.springframework.security.web.access.intercept.AuthorizationFilter@7d2f99d9]
2023-10-18 11:15:26.818  INFO   WelcomePageHandlerMapping.<init> - Adding welcome page template: index
2023-10-18 11:15:26.907  INFO   OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
2023-10-18 11:15:26.923  INFO   Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-8080"]
2023-10-18 11:15:26.928  INFO   TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
2023-10-18 11:15:26.929  INFO   SimpleBrokerMessageHandler.info - Starting...
2023-10-18 11:15:26.930  INFO   SimpleBrokerMessageHandler.info - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@41357954]]
2023-10-18 11:15:26.930  INFO   SimpleBrokerMessageHandler.info - Started.
2023-10-18 11:15:26.938  INFO   HikariDataSource.getConnection - HikariPool-4 - Starting...
2023-10-18 11:15:26.939  INFO   MtgApplication.logStarted - Started MtgApplication in 1.034 seconds (JVM running for 1335.218)
2023-10-18 11:15:26.943  INFO   ConditionEvaluationDeltaLoggingListener.onApplicationEvent - Condition evaluation unchanged
2023-10-18 11:15:26.993  INFO   HikariDataSource.getConnection - HikariPool-4 - Start completed.
2023-10-18 11:15:39.083  INFO   LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener.onApplicationEvent - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-10-18 11:15:39.085  INFO   SimpleBrokerMessageHandler.info - Stopping...
2023-10-18 11:15:39.086  INFO   SimpleBrokerMessageHandler.info - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@41357954]]
2023-10-18 11:15:39.086  INFO   SimpleBrokerMessageHandler.info - Stopped.
2023-10-18 11:15:39.111  INFO   Http11NioProtocol.log - Pausing ProtocolHandler ["http-nio-8080"]
2023-10-18 11:15:39.111  INFO   StandardService.log - Stopping service [Tomcat]
2023-10-18 11:15:39.115  INFO   Http11NioProtocol.log - Stopping ProtocolHandler ["http-nio-8080"]
2023-10-18 11:15:39.117  INFO   Http11NioProtocol.log - Destroying ProtocolHandler ["http-nio-8080"]
2023-10-18 11:15:39.124  INFO   HikariDataSource.close - HikariPool-4 - Shutdown initiated...
2023-10-18 11:15:39.130  INFO   HikariDataSource.close - HikariPool-4 - Shutdown completed.
2023-10-18 11:15:39.295  INFO   MtgApplication.logStarting - Starting MtgApplication using Java 17.0.8.1 on JuneUTF with PID 11496 (C:\JavaSpingBoot\K&K\MTG\target\classes started by juneu in C:\JavaSpingBoot\K&K\MTG)
2023-10-18 11:15:39.296  INFO   MtgApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
2023-10-18 11:15:39.825  INFO   TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
2023-10-18 11:15:39.826  INFO   Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-8080"]
2023-10-18 11:15:39.826  INFO   StandardService.log - Starting service [Tomcat]
2023-10-18 11:15:39.826  INFO   StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.80]
2023-10-18 11:15:39.857  INFO   [/].log - Initializing Spring embedded WebApplicationContext
2023-10-18 11:15:39.857  INFO   ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 559 ms
2023-10-18 11:15:40.088  WARN   TemplateMode.parse - [THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2023-10-18 11:15:40.146  INFO   DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3b94d344, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c588b72, org.springframework.security.web.context.SecurityContextPersistenceFilter@7edb3a08, org.springframework.security.web.header.HeaderWriterFilter@69439ccc, org.springframework.security.web.authentication.logout.LogoutFilter@25e8b84e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7677d836, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a06415e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2fd6032e, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@163d247e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44a654a7, org.springframework.security.web.session.SessionManagementFilter@62b9e0d0, org.springframework.security.web.access.ExceptionTranslationFilter@2c111d10, org.springframework.security.web.access.intercept.AuthorizationFilter@52dca4e0]
2023-10-18 11:15:40.231  INFO   WelcomePageHandlerMapping.<init> - Adding welcome page template: index
2023-10-18 11:15:40.314  INFO   OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
2023-10-18 11:15:40.327  INFO   Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-8080"]
2023-10-18 11:15:40.332  INFO   TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
2023-10-18 11:15:40.333  INFO   SimpleBrokerMessageHandler.info - Starting...
2023-10-18 11:15:40.333  INFO   SimpleBrokerMessageHandler.info - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@9a32d36]]
2023-10-18 11:15:40.333  INFO   SimpleBrokerMessageHandler.info - Started.
2023-10-18 11:15:40.342  INFO   HikariDataSource.getConnection - HikariPool-5 - Starting...
2023-10-18 11:15:40.344  INFO   MtgApplication.logStarted - Started MtgApplication in 1.092 seconds (JVM running for 1348.623)
2023-10-18 11:15:40.346  INFO   ConditionEvaluationDeltaLoggingListener.onApplicationEvent - Condition evaluation unchanged
2023-10-18 11:15:40.380  INFO   HikariDataSource.getConnection - HikariPool-5 - Start completed.
2023-10-18 11:15:42.296  INFO   [/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-18 11:15:42.296  INFO   DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
2023-10-18 11:15:42.298  INFO   DispatcherServlet.initServletBean - Completed initialization in 2 ms
2023-10-18 11:16:12.849  INFO   SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown - Application shutdown requested.
2023-10-18 11:16:12.853  INFO   SimpleBrokerMessageHandler.info - Stopping...
2023-10-18 11:16:12.861  INFO   SimpleBrokerMessageHandler.info - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@9a32d36]]
2023-10-18 11:16:12.862  INFO   SimpleBrokerMessageHandler.info - Stopped.
2023-10-18 11:16:12.882  INFO   Http11NioProtocol.log - Pausing ProtocolHandler ["http-nio-8080"]
2023-10-18 11:16:12.882  INFO   StandardService.log - Stopping service [Tomcat]
2023-10-18 11:16:12.883  INFO   [/].log - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-10-18 11:16:12.888  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.889  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.892  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.893  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.895  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.896  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientOutboundChannel-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.897  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.898  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.900  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.901  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [clientInboundChannel-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.903  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-10] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.903  WARN   WebappClassLoaderBase.log - The web application [ROOT] appears to have started a thread named [MessageBroker-11] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.8.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-18 11:16:12.904  INFO   Http11NioProtocol.log - Stopping ProtocolHandler ["http-nio-8080"]
2023-10-18 11:16:12.907  INFO   Http11NioProtocol.log - Destroying ProtocolHandler ["http-nio-8080"]
2023-10-18 11:16:12.939  INFO   HikariDataSource.close - HikariPool-5 - Shutdown initiated...
2023-10-18 11:16:12.941  INFO   HikariDataSource.close - HikariPool-5 - Shutdown completed.
